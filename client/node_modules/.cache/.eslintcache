[{"C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\index.js":"1","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\reportWebVitals.js":"2","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\App.js":"3","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\pages\\Signup.js":"4","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\pages\\Home.js":"5","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\utils\\auth.js":"6","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\components\\Nav\\index.js":"7","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\utils\\Mutations.js":"8","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\pages\\Login.js":"9","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\components\\LogInForm\\index.js":"10","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\pages\\Store.js":"11"},{"size":618,"mtime":1673852148711,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1673672602506,"results":"14","hashOfConfig":"13"},{"size":2165,"mtime":1674613870849,"results":"15","hashOfConfig":"13"},{"size":3384,"mtime":1674510600038,"results":"16","hashOfConfig":"13"},{"size":1662,"mtime":1674611538693,"results":"17","hashOfConfig":"13"},{"size":1608,"mtime":1674510553827,"results":"18","hashOfConfig":"13"},{"size":1260,"mtime":1674611582452,"results":"19","hashOfConfig":"13"},{"size":528,"mtime":1674510472370,"results":"20","hashOfConfig":"13"},{"size":2766,"mtime":1674510283756,"results":"21","hashOfConfig":"13"},{"size":1790,"mtime":1674528574563,"results":"22","hashOfConfig":"13"},{"size":3304,"mtime":1674619187824,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"1n3z316",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\index.js",["65","66","67","68"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql } from '@apollo/client';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\reportWebVitals.js",[],[],"C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\App.js",["69","70"],[],"\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport Nav from \"./components/Nav\";\n// import LoggedInNavbar from \"./components/LoggedInNav\";\n// import Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\n// import Dashboard from \"./pages/Dashboard\";\nimport Signup from \"./pages/Signup\";\nimport Store from \"./pages/Store\";\n// import About from \"./pages/About\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/Signup.css\";\nimport \"./styles/Nav.css\";\nimport \"./styles/Footer.css\";\nimport Auth from \"./utils/auth\";\nimport './App.css';\n\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:3001/graphql\",\n});\n\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  if (localStorage.getItem(\"id_token\") === null)\n\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <Nav />\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            {/* <Route path=\"/dashboard\" element={<Dashboard />} /> */}\n            <Route path=\"/signup\" element={<Signup />} />\n            <Route path=\"/store\" element={<Store />} />\n\n          </Routes>\n          {/* <Footer /> */}\n        </Router>\n      </ApolloProvider >\n    )\n  else return (\n    <ApolloProvider client={client}>\n      <Router>\n        {/* <LoggedInNavbar /> */}\n        <Routes>\n          {/* <Route path=\"/\" element={<Home />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          // <Route path=\"/signup\" element={<Signup />} />\n          <Route path=\"/about\" element={<About />} /> */}\n        </Routes>\n        {/* <Footer /> */}\n      </Router>\n    </ApolloProvider >\n  )\n};\n\n\nexport default App;\n","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\pages\\Signup.js",["71","72"],[],"import React, { useState } from \"react\"\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/Mutations';\r\nimport Auth from '../utils/auth';\r\nimport Login from '../pages/Login';\r\n\r\nfunction SignUpForm() {\r\n    let [formState, setFormState] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n    let [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n    // submit form \r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        // use try/catch instead of promises to handle errors\r\n        try {\r\n            // execute addUser mutation and pass in variable data from form\r\n            const username = event.target.username.value\r\n            const email = event.target.email.value\r\n            const password = event.target.password.value\r\n            setFormState(formState = { username, email, password })\r\n            console.log(formState)\r\n            const { data } = await addUser({\r\n                variables: formState\r\n            });\r\n\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Auth-form-container\">\r\n            <form className=\"Auth-form\" onSubmit={handleFormSubmit}>\r\n                <div className=\"Auth-form-content\">\r\n                    <h3 className=\"Auth-form-title\">Sign Up</h3>\r\n                    <div className=\"text-center\">\r\n                        Already registered?{\" \"}\r\n                        <span className=\"link-primary\">\r\n                            Sign In\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label>Full Name</label>\r\n                        <input\r\n                            type=\"input\"\r\n                            className=\"form-control mt-1\"\r\n                            placeholder=\"e.g Jane Doe\"\r\n                            name=\"username\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label>Email address</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control mt-1\"\r\n                            placeholder=\"Email Address\"\r\n                            name=\"email\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control mt-1\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-grid gap-2 mt-3\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                    <p className=\"text-center mt-2\">\r\n                        Forgot <a href=\"#\">password?</a>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n            {error && <div>Sign up failed</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpForm;","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\pages\\Home.js",[],[],"C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\utils\\auth.js",["73"],[],"import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    // retrieve data saved in token\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    // check if the user is still logged in\r\n    loggedIn() {\r\n        // Checks if there is a saved token and it's still valid\r\n        const token = this.getToken();\r\n        // use type coersion to check if token is NOT undefined and the token is NOT expired\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    // check if the token has expired\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // retrieve token from localStorage\r\n    getToken() {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    // set token to localStorage and reload page to homepage\r\n    login(idToken) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('id_token', idToken);\r\n\r\n        window.location.assign('/dashboard');\r\n    }\r\n\r\n    // clear token from localStorage and force logout with reload\r\n    logout() {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem('id_token');\r\n        // this will reload the page and reset the state of the application\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\components\\Nav\\index.js",["74"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport Logo from \"../../assets/logo.png\";\r\nimport Auth from \"../../utils/auth\";\r\n\r\nfunction Nav() {\r\n  const [expandNavBar, setExpandNavBar] = useState(false);\r\n\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    setExpandNavBar();\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className=\"navbar\" id={expandNavBar ? \"open\" : \"close\"}>\r\n      <div className=\"toggleButton\">\r\n        <button\r\n          onClick={() => {\r\n            setExpandNavBar((prev) => !prev);\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {\" \"}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"links\">\r\n        <Link to=\"/\">\r\n          {\" \"}\r\n          <img className=\"logo\" src={Logo} alt=\"company logo\" />{\" \"}\r\n        </Link>\r\n        <Link id=\"cubic\" to=\"/\">\r\n          {\" \"}\r\n          <span title=\"Home\"> Home </span>{\" \"}\r\n        </Link>\r\n        <Link id=\"cubic\" to=\"/signup\">\r\n          {\" \"}\r\n          <span title=\"Sign Up\"> Sign Up </span>{\" \"}\r\n        </Link>\r\n        <Link id=\"cubic\" to=\"/store\">\r\n          {\" \"}\r\n          <span title=\"Store\"> Store </span>{\" \"}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\utils\\Mutations.js",[],[],"C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\pages\\Login.js",["75"],[],"import React, { useState } from \"react\"\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/Mutations';\r\nimport Auth from '../utils/auth';\r\nimport Signup from '../pages/Signup';\r\n\r\nconst Login = (props) => {\r\n  let [formState, setFormState] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  \r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setFormState(formState={email: event.target.email.value,password: event.target.password.value})\r\n\r\n    console.log('running')\r\n\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState }\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.log(formState)\r\n      console.error(e);\r\n    }\r\n  }\r\n    // if (authMode === 'signin') {}\r\n    return (\r\n        <div className=\"Auth-form-container\">\r\n            <form name=\"login\" className=\"Auth-form\" onSubmit={handleFormSubmit}>\r\n                <div className=\"Auth-form-content\">\r\n                    <h3 className=\"Auth-form-title\">Sign In</h3>\r\n                    <div className=\"text-center\">\r\n                        Not registered yet?{\" \"}\r\n                        <span className=\"link-primary\" onClick={Signup}>\r\n                            Sign Up\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label>Email address</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control mt-1\"\r\n                            placeholder=\"Enter email\"\r\n                            name='email'\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control mt-1\"\r\n                            placeholder=\"Enter password\"\r\n                            name='password'\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-grid gap-2 mt-3\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                    <p className=\"text-center mt-2\">\r\n                        Forgot <a href=\"#\">password?</a>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n            {error && <div>Login failed</div>}\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\components\\LogInForm\\index.js",[],[],"C:\\Coding\\Beauty2Door\\beauty2door\\client\\src\\pages\\Store.js",["76","77","78","79","80","81","82","83","84","85","86"],[],"import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport LogInForm from \"../components/LogInForm\";\r\n// import Login from \"../pages/Login\"\r\nimport \"../styles/Store.css\";\r\nimport Illustration from \"../assets/skincare.jpg\";\r\nimport makeup1 from \"../assets/makeup1.jpg\"\r\nimport makeup2 from \"../assets/makeup2.jpg\"\r\nimport makeup3 from \"../assets/makeup3.jpg\"\r\nimport skincare1 from \"../assets/skincare1.jpg\"\r\nimport skincare2 from \"../assets/skincare2.jpg\"\r\nimport skincare3 from \"../assets/skincare3.jpg\"\r\n\r\n\r\nfunction Store() {\r\n    return (\r\n    <div class=\"main lower\">\r\n  <h1>BeautyToYou Products</h1>\r\n  <ul class=\"cards\">\r\n    <li class=\"cards_item\">\r\n      <div class=\"card\">\r\n        <img src={skincare1} />\r\n        <div class=\"card_content\">\r\n          <h2 class=\"card_title\">Skincare Starter Pack</h2>\r\n          <p class=\"card_text\">This pack includes our recommended skincare products for those who are not as familiar with skincare products.</p>\r\n          <button class=\"btn card_btn\">Read More</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li class=\"cards_item\">\r\n      <div class=\"card\">\r\n        <img src={skincare2} />\r\n        <div class=\"card_content\">\r\n          <h2 class=\"card_title\">Skincare Enthusiast Bundle</h2>\r\n          <p class=\"card_text\">This pack is perfect for beauty enthusiasts! Get only the best of the best in this pack!</p>\r\n          <button class=\"btn card_btn\">Read More</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li class=\"cards_item\">\r\n      <div class=\"card\">\r\n        <img src={skincare3} />\r\n        <div class=\"card_content\">\r\n          <h2 class=\"card_title\">Skincare Tester Pack</h2>\r\n          <p class=\"card_text\">This pack is perfect for testing out small size skincare products. Includes new and trendy products!</p>\r\n          <button class=\"btn card_btn\">Read More</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li class=\"cards_item\">\r\n      <div class=\"card\">\r\n        <img src={makeup1} />\r\n        <div class=\"card_content\">\r\n          <h2 class=\"card_title\">Beauty Starter Pack</h2>\r\n          <p class=\"card_text\">This pack includes our recommended beauty products for those who are not as familiar with beauty products.</p>\r\n          <button class=\"btn card_btn\">Read More</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li class=\"cards_item\">\r\n      <div class=\"card\">\r\n        <img src={makeup2} />\r\n        <div class=\"card_content\">\r\n          <h2 class=\"card_title\">Beauty Enthusiast Pack</h2>\r\n          <p class=\"card_text\">This pack is perfect for beauty enthusiasts! Get only the best of the best in this pack!</p>\r\n          <button class=\"btn card_btn\">Read More</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li class=\"cards_item\">\r\n      <div class=\"card\">\r\n        <img src={makeup3} />\r\n        <div class=\"card_content\">\r\n          <h2 class=\"card_title\">Beauty Tester Pack</h2>\r\n          <p class=\"card_text\">This pack is perfect for testing out small size beauty products. Includes new and trendy products!</p>\r\n          <button class=\"btn card_btn\">Read More</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Store;",{"ruleId":"87","severity":1,"message":"88","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":22},{"ruleId":"87","severity":1,"message":"91","line":6,"column":24,"nodeType":"89","messageId":"90","endLine":6,"endColumn":37},{"ruleId":"87","severity":1,"message":"92","line":6,"column":39,"nodeType":"89","messageId":"90","endLine":6,"endColumn":53},{"ruleId":"87","severity":1,"message":"93","line":6,"column":55,"nodeType":"89","messageId":"90","endLine":6,"endColumn":58},{"ruleId":"87","severity":1,"message":"94","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":25},{"ruleId":"87","severity":1,"message":"95","line":23,"column":8,"nodeType":"89","messageId":"90","endLine":23,"endColumn":12},{"ruleId":"87","severity":1,"message":"96","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":83,"column":32,"nodeType":"99","endLine":83,"endColumn":44},{"ruleId":"100","severity":1,"message":"101","line":54,"column":1,"nodeType":"102","endLine":54,"endColumn":34},{"ruleId":"87","severity":1,"message":"95","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":12},{"ruleId":"97","severity":1,"message":"98","line":70,"column":32,"nodeType":"99","endLine":70,"endColumn":44},{"ruleId":"87","severity":1,"message":"103","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":17},{"ruleId":"87","severity":1,"message":"104","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":11},{"ruleId":"87","severity":1,"message":"105","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":11},{"ruleId":"87","severity":1,"message":"106","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":17},{"ruleId":"87","severity":1,"message":"107","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":20},{"ruleId":"108","severity":1,"message":"109","line":24,"column":9,"nodeType":"99","endLine":24,"endColumn":32},{"ruleId":"108","severity":1,"message":"109","line":34,"column":9,"nodeType":"99","endLine":34,"endColumn":32},{"ruleId":"108","severity":1,"message":"109","line":44,"column":9,"nodeType":"99","endLine":44,"endColumn":32},{"ruleId":"108","severity":1,"message":"109","line":54,"column":9,"nodeType":"99","endLine":54,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":64,"column":9,"nodeType":"99","endLine":64,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":74,"column":9,"nodeType":"99","endLine":74,"endColumn":30},"no-unused-vars","'ApolloClient' is defined but never used.","Identifier","unusedVar","'InMemoryCache' is defined but never used.","'ApolloProvider' is defined but never used.","'gql' is defined but never used.","'useState' is defined but never used.","'Auth' is defined but never used.","'Login' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'LogInForm' is defined but never used.","'Illustration' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]