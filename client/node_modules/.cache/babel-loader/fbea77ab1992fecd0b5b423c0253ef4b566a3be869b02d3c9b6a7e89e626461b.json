{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Beauty2Door\\\\beauty2door\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport Nav from \"./components/Nav\";\n// import LoggedInNavbar from \"./components/LoggedInNav\";\n// import Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\n// import Dashboard from \"./pages/Dashboard\";\nimport Signup from \"./pages/Signup\";\n// import About from \"./pages/About\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./styles/Signup.css\";\n// import \"./styles/Navbar.css\";\n// import \"./styles/Footer.css\";\n// import Auth from \"./utils/auth\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:3001/graphql\"\n});\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nfunction App() {\n  if (localStorage.getItem(\"id_token\") === null) return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);else return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","ApolloProvider","ApolloClient","InMemoryCache","createHttpLink","setContext","Nav","Home","Signup","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App"],"sources":["C:/Coding/Beauty2Door/beauty2door/src/App.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport Nav from \"./components/Nav\";\n// import LoggedInNavbar from \"./components/LoggedInNav\";\n// import Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\n// import Dashboard from \"./pages/Dashboard\";\nimport Signup from \"./pages/Signup\";\n// import About from \"./pages/About\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./styles/Signup.css\";\n// import \"./styles/Navbar.css\";\n// import \"./styles/Footer.css\";\n// import Auth from \"./utils/auth\";\nimport './App.css';\n\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:3001/graphql\",\n});\n\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  if (localStorage.getItem(\"id_token\") === null)\n\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <Nav />\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            {/* <Route path=\"/dashboard\" element={<Dashboard />} /> */}\n            <Route path=\"/signup\" element={<Signup />} />\n            {/* <Route path=\"/about\" element={<About />} /> */}\n\n          </Routes>\n          {/* <Footer /> */}\n        </Router>\n      </ApolloProvider >\n    )\n  else return (\n    <ApolloProvider client={client}>\n      <Router>\n        {/* <LoggedInNavbar /> */}\n        <Routes>\n          {/* <Route path=\"/\" element={<Home />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          // <Route path=\"/signup\" element={<Signup />} />\n          <Route path=\"/about\" element={<About />} /> */}\n        </Routes>\n        {/* <Footer /> */}\n      </Router>\n    </ApolloProvider >\n  )\n};\n\n\nexport default App;\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,SACEC,cAAc,EACdC,YAAY,EACZC,aAAa,EACbC,cAAc,QACT,gBAAgB;AACvB,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAOC,GAAG,MAAM,kBAAkB;AAClC;AACA;AACA,OAAOC,IAAI,MAAM,cAAc;AAC/B;AACA,OAAOC,MAAM,MAAM,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,WAAW;AAAC;AAGnB,MAAMC,QAAQ,GAAGL,cAAc,CAAC;EAC9BM,GAAG,EAAE;AACP,CAAC,CAAC;AAGF,MAAMC,QAAQ,GAAGN,UAAU,CAAC,CAACO,CAAC,WAAkB;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACzC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC9C,OAAO;IACLH,OAAO,EAAE;MACP,GAAGA,OAAO;MACVI,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAC,GAAG;IAC7C;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMI,MAAM,GAAG,IAAIhB,YAAY,CAAC;EAC9BiB,IAAI,EAAER,QAAQ,CAACS,MAAM,CAACX,QAAQ,CAAC;EAC/BY,KAAK,EAAE,IAAIlB,aAAa;AAC1B,CAAC,CAAC;AAEF,SAASmB,GAAG,GAAG;EACb,IAAIP,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,EAE3C,oBACE,QAAC,cAAc;IAAC,MAAM,EAAEE,MAAO;IAAA,uBAC7B,QAAC,MAAM;MAAA,wBACL,QAAC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAG,eACP,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAE,QAAC,IAAI;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eAErC,QAAC,KAAK;UAAC,IAAI,EAAC,SAAS;UAAC,OAAO,eAAE,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAGtC;IAAA;MAAA;MAAA;MAAA;IAAA;EAEF;IAAA;IAAA;IAAA;EAAA,QACO,CACnB,KACE,oBACH,QAAC,cAAc;IAAC,MAAM,EAAEA,MAAO;IAAA,uBAC7B,QAAC,MAAM;MAAA,uBAEL,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAKE;MAAA;MAAA;MAAA;IAAA;EAEF;IAAA;IAAA;IAAA;EAAA,QACO;AAEtB;AAAC,KAhCQI,GAAG;AAgCX;AAGD,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}